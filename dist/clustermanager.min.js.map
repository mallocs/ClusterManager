{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","src/ClusterManager.js","src/LazyMarker.js","src/utils.js"],"names":[],"mappings":"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","file":"clustermanager.min.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/****\n* mallocs media industries\n* http://www.mallocs.net\n****/  \n\n\n/************************************************************************************************\n * Cluster Manager\n ************************************************************************************************/\n\n/**\n * @name ClusterManager\n * @version 2.0\n * @author Marcus Ulrich\n * @fileoverview\n * This library creates and manages clusters for Google Maps API v3. It does two things to make maps \n * with large numbers of markers more useable: 1) Combines markers in close proximity to each other \n * based on zoom level into clusters, 2) Only adds markers in the current viewport (and optional \n * padding) to the map.\n * <b>How it works</b>:<br/>\n * The manager sets up a dictionary for clusters and a dictionary for markers. Every marker that's \n * added to the manager has a string created based on it's latitude, longitude, and zoom level and \n * that's used to add it to the cluster dictionary. Nearby markers will hash to the same string so \n * nothing has to be calculated. Nearby clusters are then combined.\n * Markers can be added with optional type and subtypes so subsets of markers can be shown and \n * hidden. Markers with the same subtype will still be clustered together, but can be shown or \n * hidden seperately. Markers with the same type will be clustered together and can also be hidden\n * or shown seperately.\n * The function used to create the clusters is stored and this function can be overridden for \n * greater control of the look and/or behavior of the clusters for each marker type.\n */\n \n/***************************************************************************************************\n * Cluster Manager\n **************************************************************************************************/\n\n'use strict';\n\nimport {applyDefaults, createMarkerData, createMarkerIconOpts, createMarker} from \"./utils\";\nimport LazyMarker from \"./LazyMarker\"; \n\nwindow.ClusterManager = ClusterManager || {};\n\n/**\n * Creates a new Cluster Manager for clustering markers on a V3 Google map.\n *\n * @param {GMap3} map The map that the markers should be added to.\n * @param {object} [opts] Options for configuring the behavior of the clustering. Defaults are \n * applied in resetManager.\n * @param {google.maps.Marker[]} [opts.markers] Markers to add to the manager.\n * @param {function} [opts.zoom_to_precision=function(zoom_level) {return zoom_level + precision;}] \n * A function to set the precision for each zoom level. \n * @param {number} [opts.precision=2] A number between 0 and 27 that sets how small the cluster \n * boxes will be. Higher numbers will make smaller boxes.\n * @param {string|object} [opts.icon_color=\"00CC00\"] Sets the default icon color in HEX. Default is \n * a bright green.\n * @param {number} [opts.padding=200] The amount of padding in pixels where markers not in the \n * viewport will still be added to the map.\n * @param {boolean} [opts.visualize=false] For debugging. Will put a box around each cluster with at \n * least one marker.\n * @param {number} [opts.cluster_by_distance=true] Combine neighboring clusters if they are close \n * together. This is a little slower but makes more rounded clusters.\n * @param {number} [opts.cluster_distance_factor=2048000] Clusters are combined if they are within \n * this distance: cluster_distance_factor*Math.pow(2, -precision+2)\n * @constructor\n */\n\n\n     \nfunction ClusterManager(map, opts) {\n    var me = this;\n    opts = opts || {};\n    this.map = map;\n    this.setMap(map);\n    this.resetManager(opts);\n    this.setPrecision(this.zoomToPrecision(this.map.getZoom()));\n    google.maps.event.addDomListener(map, \"dragstart\", function() {\n        me.mapDragging = true;\n    });\n    google.maps.event.addDomListener(map, \"dragend\", function() {\n        me.mapDragging = false;\n        me._onMapMoveEnd();\n    });\n    google.maps.event.addDomListener(map, \"center_changed\", function() {\n        if (!me.mapDragging) me._onMapMoveEnd();\n    });\n    google.maps.event.addDomListener(map, \"zoom_changed\", function() {\n        me._onMapMoveEnd();\n    });\n    if (typeof opts.markers !== \"undefined\") this.addMarkers(opts.markers);\n}\n\nClusterManager.prototype = new google.maps.OverlayView();\n/**\n * @ignore\n * This is implemented only so we can tell when the map is ready and to get the custom overlay \n * functionality.\n */\nClusterManager.prototype.onAdd = function() {\n    this.ready_ = true;\n    google.maps.event.trigger(this, \"ready_\");\n};\n\n/**\n * @ignore\n */\nClusterManager.prototype.draw = function() {};\n\n/**\n * Sets the marker and clusters back to the inital state.\n *\n * @param {object} [opts] Options for configuring the behavior of the clustering. Defaults are \n * applied in resetManager.\n * @param {function} [opts.zoom_to_precision=function(zoom_level) {return zoom_level + precision;}] \n * A function to set the precision for each zoom level. \n * @param {number} [opts.precision=2] A number between 0 and 27 that sets how small the cluster \n * boxes will be. Higher numbers will make smaller boxes.\n * @param {string|object} [opts.icon_color=\"00CC00\"] Sets the default icon color in HEX. Default is \n * a bright green.\n * @param {number} [opts.padding=200] The amount of padding in pixels where markers not in the \n * viewport will still be added to the map.\n * @param {boolean} [opts.visualize=false] For debugging. Will put a box around each cluster with at \n * least one marker.\n * @param {number} [opts.cluster_by_distance=true] Combine neighboring clusters if they are close \n * together. This is a little slower but makes more rounded clusters.\n * @param {number} [opts.cluster_distance_factor=2048000] Clusters are combined if they are within \n * this distance: cluster_distance_factor*Math.pow(2, -precision+2)\n */\nClusterManager.prototype.resetManager = function(opts) {\n    this.markers = {}; //hold markers by type, then subtype.\n    this.clusters = {}; //define clusters by precision, type, then geobox.\n    this.cluster_fns = {}; //store cluster function for building the cluster markers.\n    this.cluster_meta = {}; //marker counts, etc\n    var precision = opts.precision >= 0 && opts.precision <= 27 ? opts.precision:2;\n    opts = applyDefaults({\n        padding                 : 200,\n        visualize               : false,\n        zoom_to_precision       : function(zoom_level) {\n            return zoom_level + precision;\n        },\n        cluster_by_distance     : true,\n        cluster_distance_factor : 2048000,\n        icon_color              : \"00CC00\"\n    }, opts);\n    this.opts = opts;\n};\n\n/**\n * Sets the current level of precision.\n * To speed up clustering and reduce memory, only the clusters for the current precision are \n * calculated so changing the precision may take extra time to calculate clusters at the new \n * precision.\n *\n * @param {number} precision The level to set the precision to. Currently, must be from 1 to 49.\n * @private\n */\nClusterManager.prototype.setPrecision = function(precision) {\n    if(precision >= 50 || precision < 0) return;\n    this.current_precision_ = precision;\n    this.clear();\n    if (typeof this.clusters[precision] === \"undefined\") {\n        var markers = this.getMarkers();\n        for(var i=0, length=markers.length; i<length; i++) { \n            var marker = markers[i];\n            if (this.getMarkerMeta(marker).subtype !== \"cluster\") {\n                this.addToCluster(marker, this.getMarkerMeta(marker).type, precision);\n            }\n        }\n    }\n    this.cluster();\n    this.updateMarkers();\n};\n\n/**\n * Gets the current precision of the clusterer.\n *\n * @returns {number} The current precision.\n */\nClusterManager.prototype.getPrecision = function() {\n    return this.current_precision_;\n};\n\n/**\n * Gets a hash based on latitude, longitude and precision. Higher precisions are geographically \n * smaller areas. \n * Since distance between degrees of longitude varies based on latitude: \n *     (pi/180)*(6,378,137.0 meters)cos(degrees latitude)\n * the area covered by a given geohash precision will get smaller as it approaches the poles \n * (cos(90 degrees) = 0). \n * If you visualize the boxes, however, they will look larger based on the map projection.\n * The chart below shows the width covered by a given geohash at each precision level using 49 bits.\n * prec width\t\twidth of lat\n * \t(lat/lng)\t(meters)\n * 2\t140.737488\t15666825.5392391m\n * 3\t70.3687443\t7833412.76961958m\n * 4\t35.1843720\t3916706.3848097343m\n * 5\t17.5921860\t1958353.1924048115m\n * 6\t8.79609302\t979176.5962023503m\n * 7\t4.39804651\t489588.2981011198m\n * 8\t2.19902325\t244794.14905050377m\n * 9\t1.09951162\t122397.07452519651m\n * 10\t0.54975581\t61198.53726254289m\n * 11\t0.27487790\t30599.268631216073m\n * 12\t0.13743895\t15299.63431555425m\n * 13\t0.06871947\t7649.817157720176m\n * 14\t0.03435973\t3824.9085788063016m\n * 15\t0.01717986\t1912.4542893462008m\n * 16\t0.00858993\t956.2271446193143m\n * 17\t0.00429496\t478.11357225428907m\n * 18\t0.00214748\t239.05678607177646m\n * 19\t0.00107374\t119.52839298052015m\n * 20\t0.00053687\t59.76419643331005m\n * 21\t0.00026843\t29.882098162868893m\n * 22\t0.00013421\t14.941049026066368m\n * 23\t0.00006710\t7.47052445608316m\n * 24\t0.00003355\t3.735262174255446m\n * 25\t0.00001677\t1.867631030177699m\n * 26\t0.00000838\t0.9338154597207706m\n * 27\t0.00000419\t0.46690767607425154m\n * 28\t0.00000209\t0.233453784250992m\n * 29\t0.00000104\t0.11672683517547201m\n * 30\t5.24287e-7\t0.05836336221965714m\n * 31\t2.62142e-7\t0.02918162257785948m\n * 32\t1.31070e-7\t0.014590754338905755m\n * 33\t6.55349e-8\t0.007295320219428895m\n * 34\t3.27669e-8\t0.0036476047416355755m\n * 35\t1.63829e-8\t0.0018237454207938048m\n * 36\t8.19099e-9\t0.0009118173423180302m\n * 37\t4.09499e-9\t0.0004558533030801429m\n * 38\t2.04701e-9\t0.00022787286540630993m\n * 39\t1.02301e-9\t0.0001138810646242828m\n * 40\t5.10993e-10\t0.00005688358228815859m\n * 41\t2.54999e-10\t0.000028386423065207123m\n * 42\t1.27016e-10\t0.000014139425398842023m\n * 43\t6.30109e-11\t0.00000701434462054884m\n * 44\t3.10080e-11\t0.0000034518042314022482m\n * 45\t1.50066e-11\t0.0000016705340368289525m\n * 46\t6.99174e-12\t7.783169944316711e-7m\n * 47\t3.01270e-12\t3.353723634542973e-7m\n * 48\t9.94759e-13\t1.1073615774434343e-7m\n * \n * @param {number} lat Latitude. Value is clamped to the nearest value in [-90.0, 90.0];\n * @param {number} lng Longitude. Value is wrapped to stay within [-180, 180);\n * @param {number} precision An integer representing the number of bits to take from the \n *                           untruncated latitude and longitude hashes.\n * @returns {string} geohash A binary hash string with a length twice the precision.\n */\nClusterManager.prototype.getGeohash = function(lat, lng, precision) {\n    lat = Math.min(lat, 90.0);\n    lat = Math.max(lat, -90.0);\n    lng = Math.abs((lng+180.0)%360.0) - 180.0;\n\n    if (precision <= 0) return \"\";\n    var max_power = 12; //This is the limit for maximum range of decimal numbers in javascript.\n    // Make the latitude and longitude positive and then mulitiply them by 10^12 to get rid of\n    // as many decimal places as possible. Then change this to binary.\n    var latBase = parseInt((lat + 90.0) * (Math.pow(10, max_power))).toString(2);\n    var lngBase = parseInt((lng + 180.0) * (Math.pow(10, max_power))).toString(2);\n    //Pad the front with zeros to make sure latitude and longitude are 49 bits.\n    var fortyninezeros = \"0000000000000000000000000000000000000000000000000\";\n    var latHash = fortyninezeros.substr(0, 49 - latBase.length) + latBase;\n    var lngHash = fortyninezeros.substr(0, 49 - lngBase.length) + lngBase;\n    //Take bits from the front based on the precision. \n    //Concatinate the latitude and longitude strings.\n    var geohash = latHash.substr(0, precision) + lngHash.substr(0, precision);\n    return geohash;\n};\n\n/**\n * Given a geohash, this returns the bounds on it's range. The inverse of getGeohash.\n * \n * @param {string} geohash A string representing the geobox.\n * @returns {google.maps.LatLngBounds} The bounds on the geobox. \n */\nClusterManager.prototype.geohashGetLatLngBounds = function(geohash) {\n    var max_power = 12;\n    var precision = this.geohashGetPrecision(geohash);\n    var fortyninezeros = \"0000000000000000000000000000000000000000000000000\";\n    var latMinHashBin = geohash.substr(0, precision) + fortyninezeros.substr(0, 49 - precision);\n    var lngMinHashBin = geohash.substr(precision, geohash.length) +\n                        fortyninezeros.substr(0, 49 - precision);\n    var fortynineones = \"1111111111111111111111111111111111111111111111111\";\n    var latMaxHashBin = geohash.substr(0, precision) + fortynineones.substr(0, 49 - precision);\n    var lngMaxHashBin = geohash.substr(precision, geohash.length) +\n                        fortynineones.substr(0, 49 - precision);\n    var latMinHashDec = parseInt(latMinHashBin, 2);\n    var lngMinHashDec = parseInt(lngMinHashBin, 2);\n    var latMaxHashDec = parseInt(latMaxHashBin, 2);\n    var lngMaxHashDec = parseInt(lngMaxHashBin, 2);\n    var latMin = Math.max(-90.0,  (latMinHashDec / Math.pow(10, max_power)) - 90);\n    var lngMin = Math.max(-180.0, (lngMinHashDec / Math.pow(10, max_power)) - 180);\n    var latMax = Math.min(90.0,   (latMaxHashDec / Math.pow(10, max_power)) - 90);\n    var lngMax = Math.min(180.0,  (lngMaxHashDec / Math.pow(10, max_power)) - 180);\n    return new google.maps.LatLngBounds(new google.maps.LatLng(latMin, lngMin), \n                                        new google.maps.LatLng(latMax, lngMax));\n};\n\n/**\n * Derives the precision from a geohash string.\n *\n * @param {string} geohash The geohash to find the precision of.\n * @returns {number} The derived precision of the geobox.\n * @private\n */\nClusterManager.prototype.geohashGetPrecision = function(geohash) {\n    var precision = geohash.length / 2;\n    if (parseInt(precision) !== precision || precision < 0 || precision >= 50) return undefined;\n    return precision;\n};\n\n/**\n * Gets the boxes surrounding the given box and only returns boxes that have at least one marker.\n *\n * @param {string} box_str The geobox to find the neighbors of.\n * @param {string} type The type of the geobox to find the neighbors of.\n * @returns {string[]} The strings for the geoboxes with at least one marker neighboring the input \n * geobox.\n * @private\n */\nClusterManager.prototype.getNeighborBoxes = function(box_str, type) {\n    var bounds = this.geohashGetLatLngBounds(box_str);\n    var precision = this.geohashGetPrecision(box_str);\n    var boxString1 = this.getGeohash(bounds.getSouthWest().lat() + 0.0001, \n                                     bounds.getSouthWest().lng() - 0.0001, precision);\n    var boxString2 = this.getGeohash(bounds.getSouthWest().lat() - 0.0001, \n                                     bounds.getSouthWest().lng() + 0.0001, precision);\n    var boxString3 = this.getGeohash(bounds.getNorthEast().lat() + 0.0001, \n                                     bounds.getNorthEast().lng() - 0.0001, precision);\n    var boxString4 = this.getGeohash(bounds.getNorthEast().lat() - 0.0001, \n                                     bounds.getNorthEast().lng() + 0.0001, precision);\n    var boxString5 = this.getGeohash(bounds.getSouthWest().lat() + 0.0001, \n                                     bounds.getSouthWest().lng() + 0.0001, precision);\n    var boxString6 = this.getGeohash(bounds.getSouthWest().lat() - 0.0001, \n                                     bounds.getSouthWest().lng() - 0.0001, precision);\n    var boxString7 = this.getGeohash(bounds.getNorthEast().lat() + 0.0001, \n                                     bounds.getNorthEast().lng() + 0.0001, precision);\n    var boxString8 = this.getGeohash(bounds.getNorthEast().lat() - 0.0001, \n                                     bounds.getNorthEast().lng() - 0.0001, precision);\n    var boxStrings = [boxString1, boxString2, boxString3, boxString4, boxString5, boxString6, \n                      boxString7, boxString8];\n    for (var i = 0, neighbors = [], boxString; boxString = boxStrings[i]; i++) {\n        if (typeof this.clusters[precision][type][boxString] !== \"undefined\" && boxString !== box_str) {\n            neighbors.push(boxString);\n        }\n    }\n    return neighbors;\n};\n\n/**\n * Given a geohash, this returns a polygon covering the box's bounds. Mostly for debugging to \n * visualize geoboxes.\n *\n * @param {string} geohash A string representing the geobox.\n * @param {object} [opts] Options for the appearance of the polygon.\n * @param {GMap3}  [opts.map=this.map] The map to add the polygon to.\n * @param {string} [opts.strokeColor] \n * @param {string} [opts.strokeWeight]\n * @param {string} [opts.strokeOpacity] \n * @param {string} [opts.fillColor] \n * @param {string} [opts.fillOpacity] .\n * @returns {google.maps.Polygon} A polygon covering the box's bounds.\n */\nClusterManager.prototype.boxToPolygon = function(geohash, opts) {\n    opts = applyDefaults({\n        map           : this.map,\n        strokeColor   : \"#f33f00\",\n        strokeWeight  : 5,\n        strokeOpacity : 1,\n        fillColor     : \"#ff0000\",\n        fillOpacity   : 0.2\n    }, opts);\n    var bounds = this.geohashGetLatLngBounds(geohash);  //TODO:change back!!\n    var ne = bounds.getNorthEast();\n    var sw = bounds.getSouthWest();\n    var polygon = new google.maps.Polygon({\n        paths         : opts.paths || [ne, new google.maps.LatLng(ne.lat(), sw.lng()), sw, \n                         new google.maps.LatLng(sw.lat(), ne.lng()), ne],\n        strokeColor   : opts.strokeColor,\n        strokeWeight  : opts.strokeWeight,\n        strokeOpacity : opts.strokeOpacity,\n        fillColor     : opts.fillColor,\n        fillOpacity   : opts.fillOpacity,\n        map           : opts.map\n    });\n    return polygon;\n};\n\n/**\n * Tests whether a geobox touches a given bounds. Padding expands the range of the bounds based on \n * viewport pixels.\n *\n * @param {string} geohash A string representing the geobox.\n * @param {google.maps.LatLngBounds} bounds The bounds to be tested.\n * @param {number} [padding] The number of pixels to expand the bounds. \n * @returns {boolean} True if any part of the geobox touches the bounds expanded by the padding.\n * @private\n */\nClusterManager.prototype.boxInBounds = function(geohash, bounds, padding) {\n    //make a new LatLngBounds so we don't have any side effects on our map bounds.\n    var newBounds = new google.maps.LatLngBounds(this.map.getBounds().getSouthWest(), \n                                                 this.map.getBounds().getNorthEast());\n    if (typeof padding !== \"undefined\") {\n        var proj = this.map.getProjection();\n        var scale = Math.pow(2, this.map.getZoom());\n        var pixelOffset = new google.maps.Point((padding / scale) || 0, (padding / scale) || 0);\n        var nePoint = proj.fromLatLngToPoint(bounds.getNorthEast());\n        var swPoint = proj.fromLatLngToPoint(bounds.getSouthWest());\n        var newNEPoint = new google.maps.Point(nePoint.x + pixelOffset.x, \n                                               nePoint.y - pixelOffset.y);\n        var newSWPoint = new google.maps.Point(swPoint.x - pixelOffset.x, \n                                               swPoint.y + pixelOffset.y);\n        var newNE = proj.fromPointToLatLng(newNEPoint);\n        var newSW = proj.fromPointToLatLng(newSWPoint);\n        newBounds.extend(newNE);\n        newBounds.extend(newSW);\n    }\n    var boxBounds = this.geohashGetLatLngBounds(geohash);\n    if (newBounds.contains(boxBounds.getNorthEast()) || \n        newBounds.contains(boxBounds.getSouthWest()) || \n        boxBounds.toSpan().lat() === 180) return true;\n    else return false;\n};\n\n/**\n * Use this to add markers in one batch through an array.\n *\n * @param {google.maps.Marker[]} markers An array of markers.\n * @param {string} type The type for the markers being added.\n * @param {string} subtype The subtype for the markers being added.\n */\nClusterManager.prototype.addMarkers = function(markers, type, subtype) {\n    if (Object.prototype.toString.call(markers) === '[object Array]') {\n\n        for(var i=0, length=markers.length; i<length; i++) { \n            var marker = markers[i];\n            this.addMarker(marker, {\n                type    : type,\n                subtype : subtype\n            });\n        }\n    }\n};\n\n/**\n * Add a single marker to the map. Stores an associative array for looking for marker types so we \n * can cluster by type. Doesn't build clusters or add them to the map. Each marker can have an opt \n * type and subtype to cluster by. \n *\n * @param {google.maps.Marker} marker The marker to add. \n * @param {object} [opts] Options for the behavior of the marker in the clusters.\n * @param {string} [opts.type] A string that is used to sort which markers to cluster.\n * @param {string} [opts.subtype] A string that is used to show/hide subsets of markers of a given \n * type.\n * @param {boolean} [opts.hidden] Set true to make a marker disappear from the map even if it's in \n * the viewport.\n * @param {boolean} [opts.visible] Set true if the marker is visible in the viewport. \n * @param {string} [opts.summary] The summary text that appears in the cluster's infowindow. \n * Clicking on the text opens the markers infowindow.\n */\nClusterManager.prototype.addMarker = function(raw_marker, opts) {\n    if (typeof opts === \"undefined\") opts = this.getMarkerMeta(raw_marker);\n    var marker = new LazyMarker(raw_marker);\n    \n    //Set when the marker is visible in the viewport and not hidden.\n    //Set when we want to hide the marker even if it's in the viewport.\n    var defaults = {\n        type    : \"generic\",\n        subtype : \"generic\",\n        hidden  : true,\n        visible : false\n    };\n    opts = applyDefaults(defaults, opts);\n    var type = opts.type,\n        subtype = opts.subtype;\n    //if this is the first marker of the type, save the cluster function.\n    if (typeof this.markers[type] === \"undefined\") {\n        this.markers[type] = {};\n        this.cluster_meta[type] = {\n            count: {\n                total   : 0,\n                visible : 0,\n                cluster : 0\n            }\n        };\n    }\n    if (typeof this.cluster_fns[type] === \"undefined\") {\n        this.setClusterFn(type, this.createClusterMarker);\n    }\n    //if this is the first marker of the subtype, set up an empty array to save it in.\n    if (typeof this.markers[type][subtype] === \"undefined\") {\n        this.markers[type][subtype] = [];\n    }\n    this.markers[type][subtype].push(marker);\n    if (subtype !== \"cluster\") {\n        this.cluster_meta[type][\"count\"][\"total\"] += 1;\n        this.addToCluster(marker, type, this.getPrecision());\n    }\n    if (typeof opts.summary === \"undefined\") {\n        var capType = opts.type.charAt(0).toUpperCase() + opts.type.slice(1);\n        opts.summary = typeof marker.getTitle() === \"undefined\" ? capType + \" marker \" +\n                       this.count(opts.type, \"total\") : marker.getTitle();\n    }\n    this.setMarkerMeta(marker, opts);\n};\n\n/**\n * Returns the number of markers of a particular type.\n *\n * @param {number} type The type of marker to count.\n * @returns {number} The number of markers of a particular type.\n */\nClusterManager.prototype.count = function(type, count_type) {\n    return this.cluster_meta[type][\"count\"][count_type];\n};\n\n/**\n * Adds a marker to a cluster object. Does not create the cluster markers.\n *\n * @param {google.maps.Marker} marker The marker to add. \n * @param {string} type The type of the marker to add. This will be used to form cluster groups. If \n * no type is given it is assigned type \"generic\".\n * @param {number} precision The precision to cluster at.\n * @param {string} [geohash] Force a marker into a particular geobox rather than its default one.\n * @private\n */\nClusterManager.prototype.addToCluster = function(marker, type, precision, geohash) {\n    var clusters = this.clusters;\n    var markerLL = marker.getLatLng();\n    var markerLat = markerLL.latitude;\n    var markerLng = markerLL.longitude;\n    if (typeof clusters[precision] === \"undefined\") {\n        clusters[precision] = {};\n    }\n    if (typeof clusters[precision][type] === \"undefined\") {\n        clusters[precision][type] = {};\n    }\n    var cluster = clusters[precision][type];\n    if (typeof geohash === \"undefined\") {\n        geohash = this.getGeohash(markerLat, markerLng, precision);\n    }\n    if (typeof cluster[geohash] !== \"undefined\") {\n        cluster[geohash][\"markers\"].push(marker);\n        var length = cluster[geohash][\"markers\"].length;\n        var lat = ((length - 1) / length) * cluster[geohash][\"center\"][0] + markerLat / length;\n        var lng = ((length - 1) / length) * cluster[geohash][\"center\"][1] + markerLng / length;\n        cluster[geohash][\"center\"] = [lat, lng];\n    } else {\n        cluster[geohash] = {\n            cluster : false,\n            markers : [marker],\n            center  : [markerLat, markerLng]\n        };\n    }\n};\n\n/**\n * Removes a marker from a cluster and resets the cluster box's properties.\n *\n * @param {google.maps.Marker} marker The marker to remove.\n * @param {string} geohash The geohash to remove the marker from.\n * @private\n */\nClusterManager.prototype.removeFromCluster = function(marker, geohash) {\n    var precision = this.geohashGetPrecision(geohash);\n    var type = this.getMarkerMeta(marker).type;\n    var geoBox = this.clusters[precision][type][geohash];\n    if (geoBox[\"markers\"].length === 1) {\n        delete(this.clusters[precision][type][geohash]);\n    } else if (geoBox[\"markers\"].length > 1) {\n        for (var i=0, new_markers=[], center_lat=0, center_lng=0, test_marker; \n             test_marker = geoBox[\"markers\"][i]; i++) {\n            if (test_marker !== marker) {\n                new_markers.push(test_marker);\n                center_lat = center_lat + test_marker.getLatLng().latitude;\n                center_lng = center_lng + test_marker.getLatLng().longitude;\n            }\n        }\n        center_lat = center_lat / new_markers.length;\n        center_lng = center_lng / new_markers.length;\n        geoBox[\"center\"] = [center_lat, center_lng];\n        geoBox[\"markers\"] = new_markers;\n        geoBox[\"cluster\"] = false;\n        this.clusters[precision][type][geohash] = geoBox;\n    }\n};\n\n/**\n * This takes two geoboxes and puts all the markers into the one with more markers or the first one.\n * \n * @param {string} box_str1 First box to combine.\n * @param {string} box_str2 Second box to combine.\n * @param {string} type Type of the boxes since this can't be derived.\n * @private\n */\nClusterManager.prototype.combineBoxes = function(box_str1, box_str2, type) {\n    var precision = this.geohashGetPrecision(box_str1);\n    if (this.clusters[precision][type][box_str1][\"markers\"].length < \n        this.clusters[precision][type][box_str2][\"markers\"].length) {\n        var temp = box_str1;\n        box_str1 = box_str2;\n        box_str2 = temp;\n    }\n    var length = this.clusters[precision][type][box_str2][\"markers\"].length;\n    for (var i = length - 1, marker; i >= 0; i--) {\n        marker = this.clusters[precision][type][box_str2][\"markers\"][i];\n        this.removeFromCluster(marker, box_str2);\n        this.addToCluster(marker, type, precision, box_str1);\n    }\n};\n\n/**\n * This checks neighboring geoboxes to see if they are centered within a minimum distance. This \n * makes the clusters less box shaped, but also takes extra time.\n * \n * @param {string} type The type of the markers to cluster.\n * @private\n */\nClusterManager.prototype.combineClustersByDistance = function(type) {\n    var precision = this.getPrecision();\n    var clusters = this.clusters;\n    var clusterDistanceFactor = this.opts.cluster_distance_factor || 2048000;\n    for (var boxStr in clusters[precision][type]) {\n        var neighbors = this.getNeighborBoxes(boxStr, type);\n        var distance = clusterDistanceFactor * Math.pow(2, -precision + 2);\n        var clusterCenter = clusters[precision][type][boxStr][\"center\"];\n/***\n        new google.maps.Circle({\n                strokeColor   : '#FF0000',\n                strokeOpacity : 0.8,\n                strokeWeight  : 2,\n                fillColor     : '#FF0000',\n                fillOpacity   : 0.35,\n                map           : this.map,\n                center        : new google.maps.LatLng(clusterCenter[0], clusterCenter[1]),\n                radius        : distance});\n***/\n        for (var j = 0, result = 0, neighborStr; neighborStr = neighbors[j]; j++) {\n            clusterCenter = clusters[precision][type][boxStr][\"center\"];\n            var neighborCenter = clusters[precision][type][neighborStr][\"center\"];\n            var currentDist = google.maps.geometry.spherical.computeDistanceBetween(\n                              new google.maps.LatLng(clusterCenter[0], clusterCenter[1]), \n                              new google.maps.LatLng(neighborCenter[0], neighborCenter[1]));\n            if (currentDist < distance) {\n                result = j;\n                distance = currentDist;\n            }\n        }\n        if (result) {\n            neighborStr = neighbors[result];\n            this.combineBoxes(boxStr, neighborStr, type);\n        }\n    }\n};\n\n/**\n * This builds the actual cluster markers and optionally combines boxes if the markers get too close \n * together. It does not set up the cluster dictionary.\n *\n * @param {string} [type] The type to cluster. If none is given, this sets up the clusters for every \n * group in the clusterer.\n * @private\n */\nClusterManager.prototype.cluster = function(type) {\n    var precision = this.getPrecision();\n    var clusters,\n        marker,\n        cluster_markers,\n        i;\n    if (typeof type === \"undefined\") {\n        clusters = this.clusters[precision];\n        for (type in clusters) {\n            this.cluster(type);\n        }\n        return;\n    }\n    if (typeof this.markers[type] === \"undefined\") return; //no markers to cluster\n    if (typeof this.markers[type][\"cluster\"] !== \"undefined\") {\n        for (i = 0, marker; marker = this.markers[type][\"cluster\"][i]; i++) {\n            marker.setVisible(false);\n        }\n    }\n    this.markers[type][\"cluster\"] = [];\n    this.cluster_meta[type][\"count\"][\"cluster\"] = 0;\n    clusters = this.clusters;\n    if (this.opts.cluster_by_distance) this.combineClustersByDistance(type);\n    for (var boxStr in clusters[precision][type]) {\n        //visualize the boxes by adding polygons to the map for debugging.\n        if (this.opts.visualize) this.boxToPolygon(boxStr).setMap(this.map);\n        var cluster = clusters[precision][type][boxStr];\n        for (i = 0, cluster_markers = []; marker = cluster[\"markers\"][i]; i++) {\n            var meta = this.getMarkerMeta(marker);\n            if (typeof meta.hidden === \"undefined\" || !meta.hidden) {\n                cluster_markers.push(marker);\n            }\n        }\n        if (cluster_markers.length > 1) {\n            cluster[\"cluster\"] = this.cluster_fns[type](cluster_markers, cluster[\"center\"][0], \n                                                        cluster[\"center\"][1], this);\n            this.addMarker(cluster[\"cluster\"], {\n                type    : type,\n                subtype : \"cluster\",\n                hidden  : false\n            });\n            this.cluster_meta[type][\"count\"][\"cluster\"] += 1;\n        } else {\n            cluster[\"cluster\"] = false;\n        }\n    }\n};\n\n/**\n * Gets the markers of a given type and/or subtype. Returns all markers if passed no parameters.\n *\n * @param {string} [type] The type of the markers to return.\n * @param {string} [subtype] The subtype of the markers to return.\n * @param {string|boolean} [visible] Pass \"all\" to get markers that aren't clusters.\n                                     Pass true to get all markers that are visible and not hidden.\n * @returns {google.maps.Marker[]} The markers of the given type.\n */\nClusterManager.prototype.getMarkers = function(type, subtype, visible) {\n    var markers = [];\n    if (this.markers === {}) return []; //no markers of any type.\n    if (typeof type === \"undefined\") {\n        for (type in this.markers) {\n            for (subtype in this.markers[type]) {\n                markers = markers.concat(this.markers[type][subtype]);\n            }\n        }\n    } else if (typeof subtype === \"undefined\") {\n        for (subtype in this.markers[type]) {\n            //access all subcategories with a string.\n            markers = markers.concat(this.markers[type][subtype]); \n        }\n    } else {\n        try {\n            markers = this.markers[type][subtype] || [];\n        } catch (err) {\n            markers = [];\n        }\n    }\n    if (typeof visible === \"undefined\") return markers;\n\n    for (var i=0, final_markers=[], length=markers.length; i<length; i++) {\n        var marker = markers[i];\n        var meta = this.getMarkerMeta(marker);\n        if (visible === \"all\" || meta.hidden !== visible && meta.visible === visible && \n            typeof marker !== \"function\" && meta.type !== \"cluster\") {\n            final_markers.push(marker);\n        }\n    }\n    return final_markers;\n};\n\n/**\n * Handles any change in the map viewport. Calls updateMarkers with a timeout so it doesn't lock up \n * the map.\n * @private\n */\nClusterManager.prototype._onMapMoveEnd = function() {\n    var me = this;\n    if (typeof me.moveTimeout !== \"undefined\") {\n        clearTimeout(me.moveTimeout);\n        delete(me.moveTimeout);\n    }\n    var precision = me.zoomToPrecision(me.map.getZoom());\n    if (me.getPrecision() !== precision) {\n        me.setPrecision(precision);\n    } else {\n        me.moveTimeout = setTimeout(function() {\n            delete(me.moveTimeout);\n            me.updateMarkers();\n        }, 100);\n    }\n};\n\n/**\n * Shows markers of an input type.\n *\n * @param {string} type The type of markers to show.\n * @param {string} subtype The subtype of markers to show.\n */\nClusterManager.prototype.show = function(type, subtype) {\n    this._showHide(type, subtype, false);\n};\n\n/**\n * Hides markers of the input type.\n *\n * @param {string} type The type of markers to hide.\n * @param {string} subtype The subtype of markers to hide.\n */\nClusterManager.prototype.hide = function(type, subtype) {\n    this._showHide(type, subtype, true);\n};\n\n/**\n * Does the actual showing or hiding.\n * @private\n */\nClusterManager.prototype._showHide = function(type, subtype, hide) {\n    var me = this;\n    var markers = this.getMarkers(type, subtype);\n    for(var i=0, length=markers.length; i<length; i++) { \n        var marker = markers[i];\n        this.getMarkerMeta(marker).hidden = hide;\n    }\n    if (this.ready_) this._lagUpdate(type);\n    else {\n        google.maps.event.addListenerOnce(this, \"ready_\", function() {\n            me._lagUpdate(type);\n        });\n    }\n};\n\n/**\n * Since clustering takes time, this sets up a delay before reclustering.\n * \n * @param {string} type The type to update.\n * @private\n */\nClusterManager.prototype._lagUpdate = function(type) {\n    var me = this;\n    if (typeof this.processingTimeout !== \"undefined\") {\n        clearTimeout(me.processingTimeout);\n        delete(me.processingTimeout);\n    }\n    this.processingTimeout = setTimeout(function() {\n        delete(me.processingTimeout);\n        me.clear(type);\n        me.cluster(type);\n        me.updateMarkers();\n    }, 100);\n};\n\n/**\n * This sets a cluster type to an empty state.\n *\n * @param {string} [type] The type to reset. If none is given, every type in the clusterer is reset.\n */\nClusterManager.prototype.reset = function(type) {\n    if(typeof type === \"undefined\") {\n        var clusters = this.clusters[this.getPrecision()];\n        for(type in clusters) {\n            this.reset(type);\n        }\n        return;\n    }\n    this.clear(type);\n    //this for loop should probably be a reset cluster function\n    for(var precision in this.clusters) {\n        delete(this.clusters[precision][type]);\n        this.clusters[precision][type] = {};\n    }\n    delete(this.markers[type]);\n    this.markers[type] = {};\n};\n\n/**\n * This removes the markers from the map. Use reset if you want to actually get rid of the \n * markers.\n *  \n * @param {string} [type] The type to clear. If it is not passed, all markers managed by the \n * clusterer will be cleared.\n */\nClusterManager.prototype.clear = function(type) {\n    var markers = this.getMarkers(type);\n    for(var i=0, length=markers.length; i<length; i++) { \n        var marker = markers[i];\n        marker.setMap(null);\n        this.getMarkerMeta(marker).visible = false;\n    }\n    if (typeof type !== \"undefined\" && this.cluster_meta && this.cluster_meta[type]) {\n        this.cluster_meta[type][\"count\"][\"visible\"] = 0;\n    } else {\n        for (var item in this.cluster_meta) {\n            this.cluster_meta[item][\"count\"][\"visible\"] = 0;\n        }\n    }\n};\n\n/**\n * Convert a Google map zoom level to a clusterer precision.\n *\n * @param {number} zoom_level The Google map's zoom level\n * @returns {number} The precision of the input zoom level. \n */\nClusterManager.prototype.zoomToPrecision = function(zoom_level) {\n    return this.opts.zoom_to_precision(zoom_level);\n};\n\n/**\n * Updates the markers on the map based on the current viewport with padding.\n * @private\n */\nClusterManager.prototype.updateMarkers = function() {\n    var marker,\n        meta,\n        length,\n        i;\n    var precision = this.getPrecision();\n    var currentBounds = this.map.getBounds();\n    var cluster = this.clusters[precision];\n    for (var type in cluster) {\n        var type_cluster = cluster[type];\n        for (var box in type_cluster) {\n            var cluster_box = type_cluster[box];\n            var cluster_box_meta = this.getMarkerMeta(cluster_box[\"cluster\"]);\n            if (this.boxInBounds(box, currentBounds, this.opts.padding)) {\n                if (cluster_box[\"cluster\"]) {\n                    if (!cluster_box_meta.hidden && !cluster_box_meta.visible) {\n                        for(i=0, length=cluster_box[\"markers\"].length; i<length; i++) { \n                            marker = cluster_box[\"markers\"][i];\n                            this.getMarkerMeta(marker).visible = true;\n                        }\n                        cluster_box[\"cluster\"].setMap(this.map);\n                        cluster_box[\"cluster\"].setVisible(true);\n                        cluster_box_meta.visible = true;\n                        this.cluster_meta[type][\"count\"][\"visible\"] += 1;\n                    }\n                } else {\n                    marker = cluster_box[\"markers\"][0];\n                    meta = this.getMarkerMeta(marker);\n                    if (!meta.hidden && !meta.visible) {\n                        marker.setMap(this.map);\n                        marker.setVisible(true);\n                        meta.visible = true;\n                        this.cluster_meta[type][\"count\"][\"visible\"] += 1;\n                    }\n                }\n            } else {\n                if (cluster_box[\"cluster\"]) {\n                    cluster_box[\"cluster\"].setVisible(false);\n                    if (cluster_box_meta.visible) this.cluster_meta[type][\"count\"][\"visible\"] -= 1;\n                    cluster_box_meta.visible = false;\n                } else {\n                    for(i=0, length=cluster_box[\"markers\"].length; i<length; i++) { \n                        marker = cluster_box[\"markers\"][i];\n                        meta = this.getMarkerMeta(marker);\n                        marker.setVisible(false);\n                        if (meta.visible) this.cluster_meta[type][\"count\"][\"visible\"] -= 1;\n                        meta.visible = false;\n                    }\n                }\n            }\n        }\n    }\n};\n\n/**\n * Sets the clustering function for a given type of markers. \n * \n * @param {string} type The type the clustering function is set up for.\n * @param {function} fn The function that is used to cluster the markers. See\n *                      ClusterManager.createClusterMarker for an example of\n *                      its parameters and return value.\n */\nClusterManager.prototype.setClusterFn = function(type, fn) {\n    this.cluster_fns[type] = fn;\n};\n\n/**\n * Sets a marker's meta properties. Properties already set are treated as defaults.\n * \n * @param {google.maps.Marker} marker\n * @param {object} meta\n */\nClusterManager.prototype.setMarkerMeta = function(marker, meta) {\n    var defaults = applyDefaults(meta, marker._cluster_meta);\n    marker._cluster_meta = applyDefaults(defaults, meta);\n};\n\n/**\n * Gets a marker's meta properties.\n * \n * @param {google.maps.Marker} marker\n * @returns {object} The object with extra data about the marker.\n */\nClusterManager.prototype.getMarkerMeta = function(marker) {\n    try {\n        return marker._cluster_meta;\n    } catch (err) {\n        marker._cluster_meta = {};\n        return marker._cluster_meta;\n    }\n};\n\n/**\n * A free function for creating cluster icons. At precisions greater than 10, the markers will be\n * precise looking pins. At precisions less then 10, the markers will be circles that float above\n * the map.\n * \n * @param {number} number The number of markers in the cluster.\n * @param {number} precision The precision of markers.\n * @param {string} icon_color A HEX color for the marker.\n * @param {string} [text_color=\"000000\"] A HEX color for the text inside the markers.\n * @returns {object} An object containing the configuration options for a cluster icon.\n */\nClusterManager.prototype.createClusterIcon = function(number, precision, icon_color, text_color) {\n    var iconOpts;\n    text_color = text_color || \"000000\";\n    if (precision > 10) {\n        iconOpts = {\n            \"url\"  : 'http://chart.apis.google.com/chart?cht=d&chdp=mapsapi&chl=pin%27i\\\\%27[' + \n                      number + '%27-2%27f\\\\hv%27a\\\\]h\\\\]o\\\\' + icon_color + '%27fC\\\\' + text_color + \n                      '%27tC\\\\000000%27eC\\\\Lauto%27f\\\\&ext=.png',\n            \"size\" : new google.maps.Size(21, 34)\n        };\n    } else {\n        var size = ((number + \"\").length - 1) * 6 + 24;\n        iconOpts = {\n            \"size\"   : new google.maps.Size(size, size),\n            \"anchor\" : new google.maps.Point(size/2, size/2),\n            \"shape\"  : {\n                coord : [size/2, size/2, size/2],\n                type  : \"circle\"\n            },\n            \"url\"    : \"http://chart.apis.google.com/chart?cht=it&chs=\" + size + \"x\" + size +\n                       \"&chco=\" + icon_color + \",000000ff,ffffff01&chl=\" + number + \"&chx=\" + \n                        text_color + \",0&chf=bg,s,00000000&ext=.png\"\n        };\n    }\n    return createMarkerIconOpts(iconOpts);\n};\n\n/**\n * A free function for creating cluster markers.\n * \n * @param {google.maps.Marker[]} marker_list An array of markers to make a cluster icon for.\n * @param {number} center_lat The center latitude of the cluster.\n * @param {number} center_lng The center longitude of the cluster.\n * @param {ClusterManager} manager The ClusterManager object managing the cluster.\n * @returns {google.maps.Marker} The new cluster marker.\n */\nClusterManager.prototype.createClusterMarker = function(marker_list, center_lat, center_lng, manager) {\n    var htmlEl = document.createElement(\"div\");\n    htmlEl.style.width = \"400px\";\n\n    function markerClickClosure(marker) {\n        return function(e) {\n            google.maps.event.trigger(marker, \"click\", e);\n        };\n    }\n    for (var i = 0, marker; marker = marker_list[i]; i++) {\n        var markerSpan = document.createElement(\"span\");\n        markerSpan.innerHTML = '<b>' + manager.getMarkerMeta(marker).summary + '</b><br>';\n        markerSpan.onclick = markerClickClosure(marker);\n        markerSpan.style.color = \"#334499\";\n        markerSpan.style.cursor = \"pointer\";\n        htmlEl.appendChild(markerSpan);\n        if (i >= 9) break;\n    }\n    if (marker_list.length > 10) {\n        htmlEl.appendChild(document.createTextNode((marker_list.length - 10) + \n                           \" more markers in this area. Zoom in for details.\"));\n    }\n    var icon_color = manager.opts.icon_color[manager.getMarkerMeta(marker_list[0]).type] || \n                                                                   manager.opts.icon_color;\n    var icon = manager.createClusterIcon(marker_list.length, manager.getPrecision(), icon_color);\n    marker = manager.createMarker({\n        position : new google.maps.LatLng(center_lat, center_lng),\n        title    : marker_list.length + \" markers\",\n        content  : htmlEl,\n        summary  : marker_list.length + \" markers\",\n        icon     : icon,\n        shape    : icon[\"shape\"],\n        zIndex   : marker_list.length\n    });\n    return marker;\n};\n\n/**\n * A free function for creating marker icon opts.\n * \n * @param {object} [opts] Options for configuring the appearance of the marker icon.\n * @param {number} [opts.width=32] The width of the icon.\n * @param {number} [opts.height=32] The height of the icon.\n * @param {string|object} [opts.icon_color=\"ff0000\"] The HEX color of the icon or an associate array \n * with a color for corresponding marker types.\n * @param {string} [opts.type] A type for the marker.\n * @param {string} [opts.strokeColor=\"000000\"] The HEX color for icon's stroke.\n * @param {string} [opts.cornerColor=\"ffffff\"] The HEX color for icon's corner.\n * @returns {object} An object that can be used to create a map icon.\n */\nClusterManager.prototype.createMarkerIconOpts = function(opts) {\n    if (typeof opts === \"undefined\") opts = {};\n    \n    var default_icon_color = \"ff0000\";\n    if (typeof this.opts !== \"undefined\" && typeof this.opts.icon_color !== \"undefined\") {\n        if (typeof this.opts.icon_color === \"string\") {\n            default_icon_color = this.opts.icon_color;\n        } else if (typeof this.opts.icon_color === \"object\" && typeof opts.type !== \"undefined\" && typeof this.opts.icon_color[opts.type] === \"string\") {\n            default_icon_color = this.opts.icon_color[opts.type];\n        }\n    } \n    opts = applyDefaults({icon_color: default_icon_color}, opts);\n\n    return createMarkerIconOpts(opts); \n};\n\nClusterManager.prototype.createMarkerData = function(opts) {\n    var markerData = createMarkerData(applyDefaults({icon: this.createMarkerIconOpts(opts),\n                                           map: this.map}, opts));\n    this.setMarkerMeta(markerData, markerData); //TODO: need to get rid of this    \n\n    return markerData;\n};\n\n/**\n * A free function for creating markers. In addition to the parameters below, you can pass any \n * option listed in Google's reference:\n * https://developers.google.com/maps/documentation/javascript/reference#MarkerOptions\n * \n * @param {object} [opts] Options for configuring the marker. \n * @param {google.maps.Map} [opts.map=this.map] The map on which to display the marker. \n * @param {boolean} [opts.visible=false] Make the marker visible initially.\n * @param {object} [opts.icon=this.createMarkerIconOpts(opts)] The marker's icon.\n * @param {function} [opts.fn] A function called when the marker is clicked.\n * @param {string} [opts.content=\"Marker\"] If the marker does not have opts.fn defined, this \n * determines the content of the infowindow displayed when the marker is clicked.\n */\nClusterManager.prototype.createMarker = function(opts) {\n    var marker = createMarker(this.createMarkerData(opts));\n    this.setMarkerMeta(marker, opts); //TODO: need to get rid of this    \n    return marker;\n};\n\n","\"use strict\";\nimport {applyDefaults, createMarker} from \"./utils\";\n\nfunction LazyMarker(raw_marker) {\n    if (raw_marker.constructor === LazyMarker) return raw_marker;\n    this.raw_marker = raw_marker;\n    \n    if (typeof raw_marker.setMap === \"function\") {\n        this._marker = raw_marker;\n    } else {\n        this._marker = null;\n//        setMarkerMeta(this, raw_marker);\n    }\n    google.maps.event.addListener(this, \"click\", function (e) {\n        //marker hasn't been added to the map yet, so not visible\n        if (!this._marker) this._marker = createMarker(applyDefaults(this.raw_marker, {visible: false}));\n        google.maps.event.trigger(this._marker, \"click\", e);\n    });\n}\n\nLazyMarker.prototype.setMap = function (map) {\n    if (this._marker) {\n        this._marker.setMap(map);\n        return;\n    }\n    if (!map) return;\n\n    var defaults = {\n        map: map,\n        title: this.raw_marker.title,\n        type: false,\n        subtype: \"\",\n        content: \"\"\n    };\n    var opts = applyDefaults(defaults, this.raw_marker);\n\n    //TODO: which createMarker\n    /*\n    this._marker = createMarker({\n        title: opts.title,\n        type: opts.type,\n        content: opts.content,\n        position: new google.maps.LatLng(opts.latitutde,\n                                        opts.longitude),\n        subtype: opts.subtype\n    });\n    */\n    this._marker = createMarker(opts);\n    this._marker.setMap(map);\n};\n\nLazyMarker.prototype.getPosition = function () {\n    if (this._marker && this._marker.getPosition()) {\n        return this._marker.getPosition();\n    }\n    var latlng = this.getLatLng();\n    this.raw_marker.position = new google.maps.LatLng(latlng.latitutde, latlng.longitude);\n    return this.raw_marker.position;\n};\n\nLazyMarker.prototype.getLatLng = function () {\n    if (this._marker && typeof this.raw_marker.latitude === \"undefined\") {\n        this.raw_marker.position = this._marker.getPosition();\n        this.raw_marker.latitude = this.raw_marker.position.lat();\n        this.raw_marker.longitude = this.raw_marker.position.lng();\n    }\n    return {\n        latitude: this.raw_marker.latitude,\n        longitude: this.raw_marker.longitude\n    };\n};\n\nLazyMarker.prototype.getTitle = function () {\n    return (this._marker && this._marker.getTitle()) || this.raw_marker.title;\n};\n\nLazyMarker.prototype.setVisible = function (visible) {\n    this._marker && this._marker.setVisible(visible);\n};\n\nexport default LazyMarker;","'use strict';\n\n/**\n * Tool for applying defaults. Any property in defaults will be overwritten by a corresponding\n * property in opts. If the property does not exist, the default remains. Only properties in \n * defaults will be included in the final object.\n * \n * @param {object} [defaults]\n * @param {object} [opts]\n * @returns {object} \n */\n export function applyDefaults(defaults, opts) {\n    if (typeof defaults !== \"object\") return {};\n    if (typeof opts !== \"object\") return defaults;\n    for (var index in defaults) {\n        if (typeof opts[index] === \"undefined\") {\n            opts[index] = defaults[index];\n        }\n    }\n    return opts;\n}\n \n/**\n * A free function for creating marker icon opts.\n * \n * @param {object} [opts] Options for configuring the appearance of the marker icon.\n * @param {number} [opts.width=32] The width of the icon.\n * @param {number} [opts.height=32] The height of the icon.\n * @param {string|object} [opts.icon_color=\"ff0000\"] The HEX color of the icon or an associate array \n * with a color for corresponding marker types.\n * @param {string} [opts.type] A type for the marker.\n * @param {string} [opts.strokeColor=\"000000\"] The HEX color for icon's stroke.\n * @param {string} [opts.cornerColor=\"ffffff\"] The HEX color for icon's corner.\n * @returns {object} An object that can be used to create a map icon.\n */\nexport function createMarkerIconOpts(opts) {\n    if (typeof opts === \"undefined\") opts = {};\n    if (typeof opts.width === \"undefined\") opts.width = 32;\n    if (typeof opts.height === \"undefined\") opts.height = 32;\n    var width = opts.width,\n        height = opts.height;\n    \n    var icon_color = \"ff0000\";\n    // 1. opts.icon_color[opts.type]\n    // 2. opts.icon_color\n    // 3. mgr opts.icon_color[opts.type]\n    // 3a. mgr opts.icon_color[opts.type] === undefined => \"ff0000\"\n    // 4. mgr opts.icon_color\n    // 5. \"ff0000\"\n    if (typeof opts.icon_color !== \"undefined\") {\n        if (typeof opts.icon_color === \"string\") {\n            icon_color = opts.icon_color;\n        } else if (typeof opts.icon_color === \"object\" && typeof opts.type !== \"undefined\" && typeof opts.icon_color[opts.type] === \"string\") {\n            icon_color = opts.icon_color[opts.type];            \n        }\n    }\n\n    if (typeof opts.strokeColor === \"undefined\") opts.strokeColor = \"000000\";\n    if (typeof opts.cornerColor === \"undefined\") opts.cornerColor = \"ffffff\";\n    var baseUrl = \"http://chart.apis.google.com/chart?cht=mm\";\n    var iconUrl = baseUrl + \"&chs=\" + width + \"x\" + height + \"&chco=\" +\n                 opts.cornerColor.replace(\"#\", \"\") + \",\" + icon_color + \",\" +\n                 opts.strokeColor.replace(\"#\", \"\") + \"&ext=.png\";\n\n    return applyDefaults({\n        url    : iconUrl,\n        size   : new google.maps.Size(width, height),\n        origin : new google.maps.Point(0, 0),\n        anchor : new google.maps.Point(width/2, height)\n    }, opts);\n}\n\nexport function createMarkerData(opts) {\n\n    return applyDefaults({\n        icon: createMarkerIconOpts(opts),\n        visible : false,\n        content : \"Marker\"\n    }, opts);  \n}\n\n/**\n * A free function for creating markers. In addition to the parameters below, you can pass any \n * option listed in Google's reference:\n * https://developers.google.com/maps/documentation/javascript/reference#MarkerOptions\n * \n * @param {object} [opts] Options for configuring the marker. \n * @param {google.maps.Map} [opts.map=this.map] The map on which to display the marker. \n * @param {boolean} [opts.visible=false] Make the marker visible initially.\n * @param {object} [opts.icon=this.createMarkerIconOpts(opts)] The marker's icon.\n * @param {function} [opts.fn] A function called when the marker is clicked.\n * @param {string} [opts.content=\"Marker\"] If the marker does not have opts.fn defined, this \n * determines the content of the infowindow displayed when the marker is clicked.\n */\n export function createMarker(opts) {\n\n    var marker = new google.maps.Marker(opts);\n    if (typeof opts.fn === \"undefined\") {\n        var iw = new google.maps.InfoWindow({\n            content: opts.content\n        });\n        google.maps.event.addListener(marker, \"click\", function() {\n            console.log(\"click\");\n            console.log(opts);\n            console.log(marker);\n            var now = new Date();\n            iw.setZIndex(now.getTime());\n            iw.open(opts.map, marker);\n        });\n    } else {\n        google.maps.event.addListener(marker, \"click\", opts.fn);\n    }\n //   setMarkerMeta(marker, opts);\n    return marker;\n}\n "]}